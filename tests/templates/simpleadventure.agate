@config = {config}
@path = {path}
@width = @config[width] or 1280
@height = @config[height] or 1024
@scenes = @config[scenes]

@stateBools = {}

def cleanup()
    @children = #stage~getChildren
    for @child in @children
        if @child[type] == "img" or @child~hasClass("blur") or @child~hasClass("convo")
            @child~remove

head
    title @config[title]
    style[type="text/css"]
        #body{
            position: absolute;
            top:0px;
            left:0px;
            height:100%;
            width:100%;
            background-color: #F5F5F5;
            font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
            text-align: center;
        }
        #stage{
            position: relative;
            display: inline-block;
            background-color: #F5F5F5;
            background-repeat: no-repeat;
        }
        #narration{
            position: absolute;
            top:0px;
            left:20%;
            width:60%;
            height:120px;
            overflow: auto;
            border-radius: 10px;
            border: 15px solid #F5F5F5;
            background-color: #6991AC;
            color: #F5F5F5;
            padding:10px;
            font-size: 35px;
            -webkit-transition: top .5s;
            transition: top .5s;
            cursor:pointer;
        }
        .blur {
            -webkit-filter: blur(10px);
            filter: blur(10px);
            position: absolute;
            top:0;
            left:0;
            width: 100%;
            height: 100%;
            -webkit-box-shadow: 0px 0px 5px 5px rgba(153,153,153,1);
            -moz-box-shadow: 0px 0px 5px 5px rgba(153,153,153,1);
            box-shadow: 0px 0px 5px 5px rgba(153,153,153,1);
            background-repeat: no-repeat;
        }
        img.object{
            position: absolute;
            border: none;
            cursor: pointer;
        }
        div.convo{
            position: absolute;
            left:20%;
            width:60%;
            overflow: auto;
            border-radius: 10px;
            border: 15px solid #F5F5F5;
            background-color: #6991AC;
            color: #F5F5F5;
            padding:15px;
            text-align: left;
        }
        div.convo p{
            margin: 0px;
            font-size: 35px;
        }
        div.convo ol {
            list-style-position: inside;
            margin: 20px 40px 0px 40px;
            padding:0px;
        }
        div.convo ol li{
            font-size: 25px;
            cursor: pointer;
            border-top: 2px solid #F5F5F5;
            padding:10px;
        }
        h1{
            margin-top: 25%;
            font-size: 40px;
            color: #6991AC;
        }
        button{
            font-size: 30px;
            display: block;
            box-shadow: 10px 10px 5px #333333;
            width:200px;
            background-color: #D75C37;
            border: none;
            border-radius: 5px;
            margin: 30px auto;
            padding: 10px;
            color: #F5F5F5;
            cursor: pointer;
        }
@narrationUp = false
def narrationRollUp()
    #narration~css "top" "-150px"
    @narrationUp = true
def narrationRollDown()
    #narration~css "top" "0px"
    @narrationUp = false

def play()
    processScene(@scenes[0])

def processScene( @scene )
    cleanup
    if @scene[music]
        @musicLocation = './music/${scene.music}'
        if(musicOn and #audio[src] != @musicLocation)
            #audio[src] = @musicLocation
    // location mode
    if @scene[type] == "location"
        #stage~css "background-image" 'url("./scenes/${scene.img}")'
        if @scene[text]
            script
                var sceneText = '${@scene[text]}'.replace(/\*(.+?)\*/, "<em>$1</em>").replace(/_(.+?)_/, "<strong>$1</strong>");
            #narration[html] = sceneText
            narrationRollDown
            #narration~show
        else
            #narration~hide

        for @object in @scene[objects]
            @noIfOrUnless = !@object["if"] and !@object[unless]
            @objectIf = @object["if"] and @stateBools[@object["if"]]
            @objectUnless = @object[unless] and !@stateBools[@object[unless]]

            if (@noIfOrUnless or @objectIf or @objectUnless)
                @imgStyle = @object[x] ? 'left:${@object[x]}' : ""
                @imgStyle += @object[y] ? 'top:${@object[y]}' : ""
                @imgStyle += @object[width] ? 'width:${@object[width]}' : ""
                @imgStyle += @object[height] ? 'height:${@object[height]}' : ""
                img.object[
                    src = './objects/${@object[img]}'
                    style = @imgStyle
                ]~click
                    if @object[setTrue]
                        @stateBools[@object[setTrue]] = true
                    if @object[setFalse]
                        @stateBools[@object[setFalse]] = false
                    processScene(@object[click])
    // convo mode
    else
        @objHeight = (@scene[height] or 500) - 40
        @objWidth = (@scene[width] or 500)

        #narration~hide
        div.blur[style='background-image: ${#stage~css "background-image"}']
        @imgStyle = 'cursor:auto; height:${objHeight}px; width:${objWidth}px'
        @imgStyle += 'top:20px; left:${(@width - @objWidth) / 2}px'
        img.object[src = './objects/${@scene[img]}' style=@imgStyle]
        @divStyle = 'max-height:${@height - @objHeight - 60}px; top:${@scene[height] or 500}px'
        div.convo[style = @divStyle]
            p
                script
                    '${@scene[text]}'.replace(/\*(.+?)\*/, "<em>$1</em>").replace(/_(.+?)_/, "<strong>$1</strong>");
            ol
                for @option in @scene[options]
                    @noIfOrUnless = !@object["if"] and !@object[unless]
                    @objectIf = @object["if"] and @stateBools[@object["if"]]
                    @objectUnless = @object[unless] and !@stateBools[@object[unless]]

                    if (@noIfOrUnless or @objectIf or @objectUnless)
                        li
                            script
                                '${@option[text]}'.replace(/\*(.+?)\*/, "<em>$1</em>").replace(/_(.+?)_/, "<strong>$1</strong>");
                        ~click
                            if @option[setTrue]
                                @stateBools[@option[setTrue]] = true
                            if @option[setFalse]
                                @stateBools[@option[setFalse]] = false
                            processScene(@option[result])
body
    div#body
        if @config[music]
            audio#audio[
                autoplay="autoplay"
                loop="loop"
                src='./music/${@config[music]}'
                style="display:none"
            ]
                //! Empty, but not self-closing tag
        @stageStyle = 'width:${width}px; height:${height}px;'
        @stageStyle += 'background-image:url("./scenes/${@scenes[0][img]}")'
        div#stage[style = @stageStyle]
            h1 @config.title
            button#play "Play" ~click
                @children = #stage~getChildren
                for @child in @children
                    if @child[type] == "button" or @child[type] == "h1"
                        @child~remove
                play
            button#fullscreen "Fullscreen" ~click
                script
                    var elem = document.getElementById("body");
                    if(elem.requestFullscreen) {
                        elem.requestFullscreen();
                    } else if(elem.mozRequestFullScreen) {
                        elem.mozRequestFullScreen();
                    } else if(elem.webkitRequestFullscreen) {
                        elem.webkitRequestFullscreen();
                    } else if(elem.msRequestFullscreen) {
                        elem.msRequestFullscreen();
                    } else {
                        alert("Sorry, your browser doesn't support fullscreen");
                    }
            button#music "Toggle Music" ~click
                script
                    var music = document.getElementById("audio");
                    if (music.paused) {
                        music.play();
                    } else {
                        music.pause();
                    }
                    musicOn = !musicOn;
            div#narration[style="display:none"]
                //! Empty, but not self-closing tag
            ~click
                if @narrationUp
                    narrationRollDown
                else
                    narrationRollUp

    script[type="text/javascript"]
        var musicOn = true;